from matplotlib import pyplot as plt
from scipy.optimize import curve_fit
import numpy as np

def f(x, a) :
	return (a * x * np.log(x))
x = np.array([1 ,250 ,500 ,750 ,1000 ,1250 ,1500 ,1750 ,2000 ,2250 ,2500 ,2750 ,3000 ,3250 ,3500 ,3750 ,4000 ,4250 ,4500 ,4750 ,5000 ,5250 ,5500 ,5750 ,6000 ,6250 ,6500 ,6750 ,7000 ,7250 ,7500 ,7750 ,8000 ,8250 ,8500 ,8750 ,9000 ,9250 ,9500 ,9750 ,10000 ,10250 ,10500 ,10750 ,11000 ,11250 ,11500 ,11750 ,12000 ,12250 ,12500 ,12750 ,13000 ,13250 ,13500 ,13750 ,14000 ,14250 ,14500 ,14750 ,15000 ,15250 ,15500 ,15750 ,16000 ,16250 ,16500 ,16750 ,17000 ,17250 ,17500 ,17750 ,18000 ,18250 ,18500 ,18750 ,19000 ,19250 ,19500 ,19750 ,20000 ,20250 ,20500 ,20750 ,21000 ,21250 ,21500 ,21750 ,22000 ,22250 ,22500 ,22750 ,23000 ,23250 ,23500 ,23750 ,24000 ,24250 ,24500 ,24750 ,25000 ,25250 ,25500 ,25750 ,26000 ,26250 ,26500 ,26750 ,27000 ,27250 ,27500 ,27750 ,28000 ,28250 ,28500 ,28750 ,29000 ,29250 ,29500 ,29750 ,30000 ,30250 ,30500 ,30750 ,31000 ,31250 ,31500 ,31750 ,32000 ,32250 ,32500 ,32750 ,33000 ,33250 ,33500 ,33750 ,34000 ,34250 ,34500 ,34750 ,35000 ,35250 ,35500 ,35750 ,36000 ,36250 ,36500 ,36750 ,37000 ,37250 ,37500 ,37750 ,38000 ,38250 ,38500 ,38750 ,39000 ,39250 ,39500 ,39750 ,40000 ,40250 ,40500 ,40750 ,41000 ,41250 ,41500 ,41750 ,42000 ,42250 ,42500 ,42750 ,43000 ,43250 ,43500 ,43750 ,44000 ,44250 ,44500 ,44750 ,45000 ,45250 ,45500 ,45750 ,46000 ,46250 ,46500 ,46750 ,47000 ,47250 ,47500 ,47750 ,48000 ,48250 ,48500 ,48750 ,49000 ,49250 ,49500 ,49750 ,50000])
y = np.array([2.22e-05 ,5.25e-05 ,9.56e-05 ,0.0001529 ,0.0002215 ,0.0002564 ,0.0003185 ,0.0005278 ,0.0004572 ,0.0005207 ,0.0005897 ,0.0006285 ,0.0007397 ,0.000825 ,0.0008975 ,0.0008984 ,0.0010469 ,0.0011776 ,0.0014506 ,0.0011689 ,0.001263 ,0.0014401 ,0.0013623 ,0.0013721 ,0.00201 ,0.0013682 ,0.0016452 ,0.0020044 ,0.0017715 ,0.0017055 ,0.0038633 ,0.0022817 ,0.0022178 ,0.0020782 ,0.0020799 ,0.0027813 ,0.0021046 ,0.0020321 ,0.0025278 ,0.0019699 ,0.0028698 ,0.0023564 ,0.0025565 ,0.0025058 ,0.0027494 ,0.002758 ,0.0032758 ,0.002792 ,0.0028026 ,0.0034277 ,0.0032631 ,0.0035801 ,0.003854 ,0.0035748 ,0.0031779 ,0.003647 ,0.0043299 ,0.0043415 ,0.004352 ,0.0045301 ,0.0046656 ,0.0051143 ,0.0037901 ,0.0056139 ,0.0051872 ,0.0044202 ,0.0061467 ,0.0041184 ,0.0046415 ,0.004553 ,0.005094 ,0.0064879 ,0.0064909 ,0.0055525 ,0.0053916 ,0.0070303 ,0.0061487 ,0.0060443 ,0.0081542 ,0.007478 ,0.0063566 ,0.0062888 ,0.0065205 ,0.0071731 ,0.0070221 ,0.0098533 ,0.008694 ,0.0096903 ,0.0098678 ,0.0093315 ,0.0078664 ,0.0080176 ,0.0077713 ,0.0078732 ,0.0083231 ,0.0094504 ,0.0092736 ,0.0099843 ,0.0099621 ,0.011094 ,0.0099256 ,0.0126358 ,0.0126723 ,0.0114484 ,0.0107171 ,0.0111675 ,0.0102639 ,0.0113375 ,0.0115273 ,0.0143057 ,0.0113694 ,0.0109847 ,0.0116101 ,0.0118955 ,0.0115596 ,0.0120581 ,0.0156232 ,0.0125584 ,0.0125617 ,0.0120868 ,0.0151725 ,0.0146479 ,0.0128614 ,0.0175315 ,0.0168473 ,0.0141836 ,0.0127662 ,0.0148045 ,0.0134355 ,0.0159695 ,0.0177735 ,0.0183211 ,0.0141039 ,0.016875 ,0.0142569 ,0.0145102 ,0.0195546 ,0.0155977 ,0.0153554 ,0.0153196 ,0.0200561 ,0.0170319 ,0.0205897 ,0.0166418 ,0.016176 ,0.0184993 ,0.0159934 ,0.0164003 ,0.0216882 ,0.0168439 ,0.0191937 ,0.0190807 ,0.0173033 ,0.0205073 ,0.0205945 ,0.0192324 ,0.0173761 ,0.0227526 ,0.0177765 ,0.0179026 ,0.0189353 ,0.0212919 ,0.02067 ,0.0181853 ,0.0184211 ,0.0234722 ,0.0215035 ,0.0190589 ,0.0197254 ,0.0252538 ,0.0206236 ,0.0194377 ,0.0202451 ,0.0224054 ,0.0242333 ,0.0203858 ,0.0240947 ,0.0236027 ,0.0197043 ,0.0242212 ,0.0243481 ,0.0224872 ,0.0206655 ,0.0211993 ,0.0227915 ,0.0234789 ,0.0215551 ,0.0212405 ,0.0206849 ,0.0226293 ,0.0266675 ,0.0258333 ,0.0243843 ,0.0240256 ,0.0259545 ,0.0238309 ,0.0268154 ,0.0249929 ,0.0242016 ,0.0267462 ,0.0238676])
arg, _ = curve_fit(f, x, y)
print(arg)
func = arg * x * np.log(x)
plt.xlabel("Number of elements")
plt.ylabel("Time")
plt.title("Semi-sorted_IntroSort")
plt.plot(x,func, linewidth=1.5)
plt.scatter(x,y, c='red', s = 0.3)
plt.show()